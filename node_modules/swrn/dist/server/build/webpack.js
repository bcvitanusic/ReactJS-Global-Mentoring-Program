'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.buildWebpack = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _webpack = require('webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _path = require('path');

var _extractTextWebpackPlugin = require('extract-text-webpack-plugin');

var _extractTextWebpackPlugin2 = _interopRequireDefault(_extractTextWebpackPlugin);

var _globPromise = require('glob-promise');

var _globPromise2 = _interopRequireDefault(_globPromise);

var _writeFileWebpackPlugin = require('write-file-webpack-plugin');

var _writeFileWebpackPlugin2 = _interopRequireDefault(_writeFileWebpackPlugin);

var _pagePlugin = require('./plugins/page-plugin');

var _pagePlugin2 = _interopRequireDefault(_pagePlugin);

var _combineAssetsPlugin = require('./plugins/combine-assets-plugin');

var _combineAssetsPlugin2 = _interopRequireDefault(_combineAssetsPlugin);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var buildWebpack = exports.buildWebpack = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(_ref2) {
        var dir = _ref2.dir,
            dist = _ref2.dist,
            _ref2$routes = _ref2.routes,
            routes = _ref2$routes === undefined ? {} : _ref2$routes;
        var entry, totalPage, webpackConfig;
        return _regenerator2.default.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        entry = {};


                        routes.map(function (item) {
                            entry[(0, _path.join)('bundles', item.page)] = (0, _path.join)(dir, dist, 'dist', item.page);
                        });

                        totalPage = routes.filter(function (item) {
                            return item.path != null;
                        }).length;


                        entry['app.js'] = (0, _path.join)(__dirname, '..', '..', 'client/swrn.js');

                        webpackConfig = {
                            entry: entry,
                            output: {
                                path: (0, _path.resolve)(dir, './' + dist),
                                libraryTarget: 'commonjs2',
                                filename: "[name]",
                                chunkFilename: "[name]",
                                strictModuleExceptionHandling: true
                            },
                            resolve: {
                                extensions: ['.js', '.jsx']
                            },
                            module: {
                                rules: [{
                                    test: /\.(js)$/,
                                    exclude: /node_modules/,
                                    loader: 'babel-loader',
                                    options: {
                                        plugins: [[require.resolve('babel-plugin-module-resolver'), {
                                            alias: {
                                                'swrn/router': require.resolve('../../lib/router')
                                            }
                                        }]]
                                    }
                                }]
                            },
                            plugins: [new _writeFileWebpackPlugin2.default({
                                exitOnErrors: false,
                                log: false,
                                useHashIndex: false
                            }), new _webpack2.default.optimize.CommonsChunkPlugin({
                                name: 'common',
                                filename: 'common.js',
                                minChunks: function minChunks(module, count) {

                                    if (module.context && module.context.indexOf(_path.sep + 'react-dom' + _path.sep) >= 0) {
                                        return true;
                                    }

                                    if (totalPage < 2) {
                                        return false;
                                    }

                                    return count >= totalPage * 0.5;
                                }
                            }), new _webpack2.default.optimize.CommonsChunkPlugin({
                                name: 'manifest',
                                filename: 'manifest.js'
                            }), new _combineAssetsPlugin2.default({
                                input: ['manifest.js', 'common.js', 'app.js'],
                                output: 'main.js'
                            }), new _pagePlugin2.default(), new _webpack2.default.DefinePlugin({
                                'process.env.NODE_ENV': (0, _stringify2.default)('production')
                            }), new _webpack2.default.optimize.UglifyJsPlugin({
                                compress: { warnings: false },
                                sourceMap: false
                            }), new _webpack2.default.optimize.ModuleConcatenationPlugin()]
                        };
                        return _context.abrupt('return', (0, _webpack2.default)(webpackConfig));

                    case 6:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, undefined);
    }));

    return function buildWebpack(_x) {
        return _ref.apply(this, arguments);
    };
}();

exports.default = function () {
    var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(_ref4) {
        var dir = _ref4.dir,
            dev = _ref4.dev,
            dist = _ref4.dist,
            page = _ref4.page,
            _ref4$routes = _ref4.routes,
            routes = _ref4$routes === undefined ? {} : _ref4$routes,
            entry = _ref4.entry,
            assetPrefix = _ref4.assetPrefix;

        var _main, extractCss, rules, _tmpCss, JsonFile, plugins, webpackConfig;

        return _regenerator2.default.wrap(function _callee2$(_context2) {
            while (1) {
                switch (_context2.prev = _context2.next) {
                    case 0:
                        if (entry) {
                            _context2.next = 9;
                            break;
                        }

                        _context2.next = 3;
                        return (0, _globPromise2.default)('main.js', { cwd: dir });

                    case 3:
                        _main = _context2.sent;


                        entry = {};

                        if (dev) {
                            entry['main.js'] = (0, _path.join)(__dirname, '..', '..', 'client/swrn-dev.js');
                        }

                        if (_main.length) {
                            entry['bundles/main.js'] = (0, _path.join)(dir, 'main.js');
                        }

                        routes.map(function (item) {
                            entry[(0, _path.join)('bundles', item.page)] = (0, _path.join)(dir, item.page);
                        });

                        if (dev) {
                            entry = _lodash2.default.mapValues(entry, function (val) {
                                return ['webpack-hot-middleware/client?path=/_swrn/webpack-hmr&timeout=2000', val];
                            });
                        }

                    case 9:
                        extractCss = new _extractTextWebpackPlugin2.default('static/style/[name].css');

                        // 根据环境定义loader规则

                        rules = [];
                        _tmpCss = [];

                        JsonFile = function JsonFile(cssFileName, json, outputFileName) {
                            _tmpCss.push({
                                filename: cssFileName,
                                data: json
                            });
                        };

                        if (dev) {
                            rules.push({
                                test: /\.js$/,
                                loader: 'hot-self-accept-loader',
                                include: [(0, _path.join)(dir, page)]
                            }, {
                                test: /\.js$/,
                                loader: 'react-hot-loader/webpack',
                                exclude: /node_modules/
                            }, {
                                test: /\.scss$/,
                                exclude: /node_modules/,
                                loader: 'style-loader!css-loader!sass-loader'
                            });
                        } else {
                            rules.push({
                                test: /\.scss$/,
                                exclude: /node_modules/,
                                loader: extractCss.extract(['css-loader'])
                            }, {
                                test: /\.scss$/,
                                use: [{
                                    loader: 'emit-file-loader',
                                    options: {
                                        name: 'dist/[path][name].swrn',
                                        transform: function transform(_ref5) {
                                            var content = _ref5.content,
                                                sourceMap = _ref5.sourceMap,
                                                interpolatedName = _ref5.interpolatedName,
                                                resource = _ref5.resource;

                                            var _content = {};
                                            _tmpCss.map(function (item) {
                                                if (item.filename == resource) {
                                                    _content = item;
                                                }
                                            });
                                            return {
                                                content: content,
                                                _content: (0, _stringify2.default)(_content)
                                            };
                                        }
                                    }
                                }, {
                                    loader: 'postcss-loader',
                                    options: {
                                        plugins: [require('postcss-cssnext')({
                                            warnForDuplicates: false
                                        }), require('postcss-modules')({
                                            generateScopedName: '[name]_[local]_[hash:base64:5]]',
                                            getJSON: function getJSON(cssFileName, json, outputFileName) {
                                                JsonFile(cssFileName, json, outputFileName);
                                            }
                                        }), require('cssnano')()]
                                    }
                                }, 'sass-loader']
                            });
                        }

                        rules.push({
                            test: /\.(png|gif|jpg|jpeg|bmp)$/,
                            exclude: /node_modules/,
                            loader: 'file-loader?name=static/images/[name].[hash:8].[ext]'
                        }, {
                            test: /\.(woff|woff2|svg|ttf|eot)($|\?)/,
                            loader: 'file-loader?name=static/fonts/[name].[hash:8].[ext]'
                        }, {
                            test: /\.js$/,
                            loader: 'emit-file-loader',
                            include: [dir, (0, _path.join)(dir, page)],
                            exclude: /node_modules/,
                            options: {
                                name: 'dist/[path][name].[ext]',
                                transform: function transform(_ref6) {
                                    var content = _ref6.content,
                                        sourceMap = _ref6.sourceMap,
                                        interpolatedName = _ref6.interpolatedName;

                                    if (!/\.js$/.test(interpolatedName)) {
                                        return { content: content, sourceMap: sourceMap };
                                    }

                                    //开发环境需要将styleName转为className
                                    //发布环境不再使用className,所有的转化的styleName全部交给服务器提供class
                                    var tag = dev ? 'className' : 'styleName';

                                    var line = 0;
                                    var _content = '';
                                    content = content + '\r\n';
                                    for (var i = 0; i < content.length; i++) {
                                        if (content[i].match(/\n/) != null) {
                                            (function () {
                                                var res = '';
                                                for (var j = line; j < i; j++) {
                                                    res += content[j];
                                                }
                                                res = res.replace(/(^\s*)|(\s*$)/g, "");

                                                //匹配styleName => className
                                                //{ styleName: 'name' }
                                                //'styleName'
                                                //"styleName"

                                                var _className = res.match(/[{'"\s]styleName['":]/g);

                                                if (_className != null) {
                                                    _className.map(function (item) {
                                                        var _match = item.match(/([{'"\s])styleName(['":])/);
                                                        res = res.replace(item, '' + _match[1] + tag + _match[2]);
                                                    });
                                                }

                                                _content += res + '\n';
                                                line = i;
                                            })();
                                        }
                                    }
                                    return {
                                        content: _content, //在webpack中传文件
                                        _content: dev ? _content : content //写文件
                                    };
                                }
                            }
                        }, {
                            test: /\.(js|jsx)$/,
                            exclude: /node_modules/,
                            loader: 'babel-loader',
                            options: {
                                presets: ["react", "es2015", "stage-0"],
                                plugins: ["transform-runtime", [require.resolve('babel-plugin-module-resolver'), {
                                    alias: {
                                        'swrn/router': require.resolve('../../lib/router')
                                    }
                                }]]
                            }
                        });

                        // 根据环境定义插件
                        plugins = [new _webpack2.default.DefinePlugin({
                            'process.env.NODE_ENV': dev ? (0, _stringify2.default)('development') : (0, _stringify2.default)('production')
                        }),
                        // 输出webpack编译的文件
                        new _writeFileWebpackPlugin2.default({
                            exitOnErrors: false,
                            log: false,
                            useHashIndex: false
                        }), new _pagePlugin2.default()];


                        if (dev) {
                            plugins.push(new _webpack2.default.HotModuleReplacementPlugin(), new _webpack2.default.NoEmitOnErrorsPlugin());
                        } else {
                            plugins.push(extractCss, new _webpack2.default.optimize.UglifyJsPlugin({
                                compress: { warnings: false },
                                sourceMap: false
                            }), new _webpack2.default.optimize.ModuleConcatenationPlugin());
                        }

                        webpackConfig = {
                            entry: entry,
                            output: {
                                path: (0, _path.resolve)(dir, './' + dist),
                                filename: "[name]",
                                publicPath: dev ? '/_swrn/webpack/' : assetPrefix + '/',
                                libraryTarget: 'commonjs2',
                                strictModuleExceptionHandling: true,
                                chunkFilename: '[name]'
                            },
                            module: {
                                rules: rules
                            },
                            resolve: {
                                extensions: ['.js', '.jsx']
                            },
                            resolveLoader: {
                                modules: [(0, _path.join)(__dirname, '..', '..', '..', 'node_modules'), 'node_modules', (0, _path.join)(__dirname, 'loaders')]
                            },
                            plugins: plugins
                        };
                        return _context2.abrupt('return', (0, _webpack2.default)(webpackConfig));

                    case 19:
                    case 'end':
                        return _context2.stop();
                }
            }
        }, _callee2, this);
    }));

    function createCompiler(_x2) {
        return _ref3.apply(this, arguments);
    }

    return createCompiler;
}();